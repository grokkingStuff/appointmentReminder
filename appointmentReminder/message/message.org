#+STARTUP: noindent


#+BEGIN_SRC python :tangle message.py :noweb yes
class Message(object):
    def __init__(self,message):
        from string import Template
        self.header    = Template(message["header"])
        self.body      = Template(message["body"])
        self.eventType =          message["eventType"]

    <<substitute>>
#+END_SRC


* substitute
Takes in any number of *named* arguments and substitute them into the message header and body
#+NAME: substitute
#+BEGIN_SRC python
  def substitute(self,**kwargs):

      from string import Template

      for key,value in kwargs.items():
          i = {"{}".format(key):value}

          # Substitute the keywords into the tempate and save the result (string)
          self.header = self.header.safe_substitute(i)
          self.body = self.body.safe_substitute(i)

          # Convert the resulting string back into a template
          self.header = Template(self.header)
          self.body = Template(self.body)

      if ((    len(Template.pattern.findall(self.header.safe_substitute())) is 0) and
          (    len(Template.pattern.findall(self.body.safe_substitute())) is 0)):
          self.header = self.header.safe_substitute()
          self.body = self.body.safe_substitute()
          return True  # True that the string is substituted completely
      else:
          return False # False that the string is substitute completely
#+END_SRC

** tests

*** check if header substitute text
#+BEGIN_SRC python

#+END_SRC

*** check if body substitutes text
#+BEGIN_SRC python

#+END_SRC


* test

#+BEGIN_SRC python

import message
import pytest



#+END_SRC
load more comments
